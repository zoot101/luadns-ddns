######################################
# Luadns-DDNS Config
######################################
# COPYRIGHT (C) Mark Finnan 2024
######################################

#####################################
# URLs to Get Public IP Address
#####################################
# IP Check URLs - Not Recommended to Change
ip_check_urls=( "ifconfig.me" "ifconfig.co" "icanhazip.com" "ipecho.net/plain")

#####################################
# Times To Update Regardless of IP Change
#####################################
# Recommend to leave unchanged as it should match what is in
# /etc/systemd/system/luadns-ddns.timer
# If these are changed, then the timer file needs to be changed
# also.
times_to_update=( "00:00" "02:00" "04:00" "06:00" "08:00" "10:00" "12:00" "14:00" "16:00" "18:00" "20:00" "22:00")

#####################################
# Luadns Credentials
#####################################
# Login email for your Luadns.com Account
lua_email="mail@example.org"

# API Key
# Permission to access a single zone is the default that Luadns provide
# Can be generated easily with the Luadns.com Web UI. Not really ideal to
# have to store it here, but things won't work without it
lua_api_key="123456789ABCDEF0"

####################################
# DNS Record Details
####################################
# Specify the DNS Records that will be updated at Luadns.com. Keep brackets
# to define as an array. Add as many as desired, the script does not
# impose a limit.
#
# To defined multiple use the following:
# record_names=( "record1.example.org" "record2.example.org" ... )
#
# For a Single Record, use the following:
# record_names="record1.example.org"
record_names=( "record1.example.org" )

####################################
# Email Notifications
####################################
# Email address to send notifications to. To disable email notifications
# leave either of these commented out.
#email_address="mail1@example2.org"
#muttrc_path="/path/to/muttrc/path/here"

####################################
# Enable IP Logging
####################################
# Logs the IP address received to a logfile each time the script is run
# then sends the logfile via email once the script is run the next day
# Delete logfiles over 28 days old. Valid values are "yes" or "no"
# Comment out or set to "no" to disable.
#ip_logging="no"

# Send yesterdays Public IP log file as a notification the first time
# the script is invoked (if it exists). Valid values are "yes" or "no"
# Comment out or set to "no" to disable. Note this has no effect if the
# ip_logging setting is disabled.
#notify_with_log="no"

###################################################
# Notification Hook (Optional)
###################################################
# Path to a custom notification hook if one wishes to use
# an alternative form of notification than standard emails.
#
# If any variables are required define them here with export
# example: export ntfy_url="https://ntfy.sh/channel_name" etc.
#
# The hook is called like so:
# /path/to/hook "Email-Subject" "Email-Body"
#
# And in the case where IP Logging is used and an attachment is generated
# the hook is called like so:
# /path/to/hook "Email-Subject" "Email-Body" "Email Attachment"
#notification_hook="/path/to/notification/hook"


